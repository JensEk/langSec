(* Troupe code for a malicious client that sends a profile with a level that is too high. *)

import lists
import stdio
import declassifyutil

let 
    fun loopLevel () =
                let 
                    val _ = print "Waiting for LeackedInfo response..."

                    val malResponse = receive [hn ("LeackedInfo", malResponse) => malResponse]
                    val _ = printWithLabels ("LeackedInfo: ", malResponse)
                    val (c1) = malResponse

                  
                in
                  loopLevel ()
                end
    

    fun client server_id =
        let

            val lev = `{}`
            val name = ""
            val year = 0
            val gender = ""
            val interests = ""
            val profile = (lev, name, year, gender, interests)

            val pid = self()

            val agentfn = fn (levX,nameX,yearX,genderX,interestsX) =>
                    let 
                        

                        val leckedGender = if (genderX)
                            then
                                true
                            else
                                false

                        val preference = true
                        val maybeProfile = ()
                        val _ = send (pid, ("LeackedInfo", (leckedGender)))
                    

                    in
                        (preference, maybeProfile)
                    end

            val _ = send (server_id, ("NEWPROFILE", (profile, agentfn, self () )))
        in
            loopLevel ()
        end

    
    val serverId = whereis ("@id-server", "datingServer")   
in
    spawn (fn () => client serverId) 
end
